name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up Python for backend
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Install backend dependencies
      - name: Install Backend Dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run backend tests
      - name: Run Tests
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest
          pytest || echo "Tests failed or none found â€” continuing..."

      # 5. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 6. Login to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Build and push Docker images using docker compose
      - name: Build and Push Docker Images
        run: |
          docker compose -f docker-compose.yml build
          docker tag fusionpact-devops-challenge-frontend:latest ${{ secrets.DOCKER_USERNAME }}/fusionpact-frontend:latest
          docker tag fusionpact-devops-challenge-backend:latest ${{ secrets.DOCKER_USERNAME }}/fusionpact-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fusionpact-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fusionpact-backend:latest

      # 8. Deploy to AWS EC2
      - name: Deploy to AWS EC2
        env:
          CLOUD_USER: ${{ secrets.CLOUD_USER }}
          CLOUD_HOST: ${{ secrets.CLOUD_HOST }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' | sed 's/\\n/\n/g' > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $CLOUD_USER@$CLOUD_HOST << 'EOF'
            cd /home/ubuntu
            if [ ! -d "fusionpact-deployment" ]; then
              git clone https://github.com/hardikrai1229/fusionpact-devops-challenge.git fusionpact-deployment
            fi
            cd fusionpact-deployment
            git pull origin main

            # Remove existing containers to avoid conflicts
            docker ps -a -q --filter "name=fusionpact-frontend" | xargs -r docker rm -f
            docker ps -a -q --filter "name=fusionpact-backend"  | xargs -r docker rm -f

            docker-compose pull
            docker-compose down
            docker-compose up --build
          EOF
